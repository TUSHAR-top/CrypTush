{"ast":null,"code":"import _objectSpread from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as _getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n      if (me._request) {\n        return;\n      }\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n        me._request = null;\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          me._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          me._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      me._lastDate = date;\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n      if (me._active) {\n        me._notify(false);\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n      if (!me._active) {\n        me._target[prop] = to;\n        me._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator3 = _createForOfIteratorHelper(items),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me._dataCheck();\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n      me._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      me._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n        data = me._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = me._getOtherScale(scale);\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, value, parsed, otherValue;\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n      var _iterator4 = _createForOfIteratorHelper(me._syncList),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n            method = _step4$value[0],\n            arg1 = _step4$value[1],\n            arg2 = _step4$value[2];\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        me.parse(0, count);\n      }\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n      me.parse(start, count);\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._sync(['_removeElements', start, count]);\n      this._sync(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var index = me.index,\n        vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = me._getRuler();\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n        vScale = _me$_cachedMeta.vScale,\n        _stacked = _me$_cachedMeta._stacked,\n        _me$options = me.options,\n        baseValue = _me$options.base,\n        minBarLength = _me$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (me.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n        _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n        xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n        _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n        yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n        data = _this$_cachedMeta.data,\n        _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n        iScale = _me$_cachedMeta2.iScale,\n        vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        me.updateElement(point, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n    _classCallCheck(this, DoughnutController);\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n      var chartWeight = me._getRingWeight(me.index);\n      var _me$_getRotationExten = me._getRotationExtents(),\n        circumference = _me$_getRotationExten.circumference,\n        rotation = _me$_getRotationExten.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var circumference = me._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var startAngle = me._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            if (controller !== me) {\n              controller.configure();\n            }\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      me._drawStart = start;\n      me._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._datasetIndex = me.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n        iScale = _me$_cachedMeta3.iScale,\n        vScale = _me$_cachedMeta3.vScale,\n        _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n    _classCallCheck(this, PolarAreaController);\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(ScatterController);\n}(LineController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n      index = _metasets$i2.index,\n      data = _metasets$i2.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n    x = _getRelativePosition$.x,\n    y = _getRelativePosition$.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return me;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this4;\n    _classCallCheck(this, Scale);\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n      var _me$getUserBounds = me.getUserBounds(),\n        min = _me$getUserBounds.min,\n        max = _me$getUserBounds.max,\n        minDefined = _me$getUserBounds.minDefined,\n        maxDefined = _me$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = me.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = me._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n        _me$options2 = me.options,\n        tickOpts = _me$options2.ticks,\n        titleOpts = _me$options2.title,\n        gridOpts = _me$options2.grid;\n      var display = me._isVisible();\n      var isHorizontal = me.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n            first = _me$_getLabelSizes.first,\n            last = _me$_getLabelSizes.last,\n            widest = _me$_getLabelSizes.widest,\n            highest = _me$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n      me._handleMargins();\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n        _me$options3$ticks = _me$options3.ticks,\n        align = _me$options3$ticks.align,\n        padding = _me$options3$ticks.padding,\n        position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n        axis = _this$options.axis,\n        position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = me._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = me.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = me._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n        position = _me$options4.position,\n        ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n        position = _me$options5.position,\n        _me$options5$ticks = _me$options5.ticks,\n        crossAlign = _me$options5$ticks.crossAlign,\n        mirror = _me$options5$ticks.mirror,\n        padding = _me$options5$ticks.padding;\n      var labelSizes = me._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = me.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = me.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = me.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = me.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n      if (me.options.ticks.mirror) {\n        return;\n      }\n      var chart = me.chart;\n      var position = me.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n        ctx = me.ctx,\n        grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = me.ctx;\n      var area = me._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options2 = this.options,\n        position = _this$options2.position,\n        title = _this$options2.title,\n        reverse = _this$options2.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n      if (!me._isVisible()) {\n        return;\n      }\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n        me._notify(me._init, chart, 'install');\n      }\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n      var result = me._notify(descriptors, chart, hook, args);\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n        me._notify(me._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator7 = _createForOfIteratorHelper(descriptors),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var descriptor = _step7.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator8 = _createForOfIteratorHelper(names),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var prop = _step8.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator9 = _createForOfIteratorHelper(names),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var prop = _step9.value;\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  return false;\n}\nvar version = \"3.5.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this5 = this;\n    _classCallCheck(this, Chart);\n    var me = this;\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n        aspectRatio = _this$options3.aspectRatio,\n        maintainAspectRatio = _this$options3.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n        datasets = me.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n      me._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n          meta = me.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      me._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n      me._plugins.invalidate();\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n          controller = _me$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      me._minPadding = minPadding;\n      me._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      me._updateDatasets(mode);\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      me._layers.sort(compare2Level('z', '_idx'));\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n          width = _me$_resizeBeforeDraw.width,\n          height = _me$_resizeBeforeDraw.height;\n        me._resize(width, height);\n        me._resizeBeforeDraw = null;\n      }\n      me.clear();\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = me._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = me.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? me.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        me.update();\n      } else {\n        me.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        me.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n        ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      me.config.clearCache();\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        me._eventHandler(e);\n      };\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n          index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = me._handleEvent(e, replay);\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        me.render();\n      }\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n        lastActive = _me$_active === void 0 ? [] : _me$_active,\n        options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n      me._lastEvent = null;\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n      changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this7;\n    _classCallCheck(this, ArcElement);\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n    return _this7;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint.angle,\n        distance = _getAngleFromPoint.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options4 = this.options,\n        offset = _this$options4.offset,\n        spacing = _this$options4.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n        circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset, spacing);\n      drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref2 = params || {},\n    _ref2$move = _ref2.move,\n    move = _ref2$move === void 0 ? true : _ref2$move,\n    reverse = _ref2.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref3 = params || {},\n    _ref3$move = _ref3.move,\n    move = _ref3$move === void 0 ? true : _ref3$move,\n    reverse = _ref3.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator10 = _createForOfIteratorHelper(segments),\n    _step10;\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var segment = _step10.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this8;\n    _classCallCheck(this, LineElement);\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n    _this8._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n    return _this8;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n      var segmentMethod = _getSegmentMethod(me);\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      var _iterator11 = _createForOfIteratorHelper(segments),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var segment = _step11.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n      ctx.save();\n      _draw(ctx, me, start, count);\n      ctx.restore();\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this9;\n    _classCallCheck(this, PointElement);\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n    return _this9;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var me = this;\n      var options = me.options;\n      if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this10;\n    _classCallCheck(this, BarElement);\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n    return _this10;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      var inflateAmount = 0.33;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n    min = _iScale$getUserBounds2.min,\n    max = _iScale$getUserBounds2.max,\n    minDefined = _iScale$getUserBounds2.minDefined,\n    maxDefined = _iScale$getUserBounds2.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var target = null;\n  var horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n    _ref4$x = _ref4.x,\n    x = _ref4$x === void 0 ? null : _ref4$x,\n    _ref4$y = _ref4.y,\n    y = _ref4$y === void 0 ? null : _ref4$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref5) {\n    var start = _ref5.start,\n      end = _ref5.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  var chart = source.chart,\n    scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nfunction getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator12 = _createForOfIteratorHelper(segments),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var segment = _step12.value;\n      var start = segment.start,\n        end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator13 = _createForOfIteratorHelper(targetSegments),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var tgt = _step13.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator14 = _createForOfIteratorHelper(fillSources),\n            _step14;\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var fillSource = _step14.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref6 = bounds || {},\n    property = _ref6.property,\n    start = _ref6.start,\n    end = _ref6.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var _step15$value = _step15.value,\n        src = _step15$value.source,\n        tgt = _step15$value.target,\n        start = _step15$value.start,\n        end = _step15$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n        backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref7 = fillOption || {},\n    _ref7$above = _ref7.above,\n    above = _ref7$above === void 0 ? color : _ref7$above,\n    _ref7$below = _ref7.below,\n    below = _ref7$below === void 0 ? color : _ref7$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this11;\n    _classCallCheck(this, Legend);\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = me._margins.left;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = me._margins.top;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n        ctx = me.ctx;\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = me._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxWidth = me.maxWidth,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxHeight = me.maxHeight,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n      if (!me.options.display) {\n        return;\n      }\n      var titleHeight = me._computeTitleHeight();\n      var hitboxes = me.legendHitBoxes,\n        _me$options6 = me.options,\n        align = _me$options6.align,\n        padding = _me$options6.labels.padding,\n        rtl = _me$options6.rtl;\n      var rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        var _iterator16 = _createForOfIteratorHelper(hitboxes),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var hitbox = _step16.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        var _iterator17 = _createForOfIteratorHelper(hitboxes),\n          _step17;\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var _hitbox = _step17.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n        me._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n        columnSizes = me.columnSizes,\n        lineWidths = me.lineWidths,\n        ctx = me.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = me.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n        me._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this12;\n    _classCallCheck(this, Title);\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n      var _me$_drawArgs = me._drawArgs(offset),\n        titleX = _me$_drawArgs.titleX,\n        titleY = _me$_drawArgs.titleY,\n        maxWidth = _me$_drawArgs.maxWidth,\n        rotation = _me$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this13;\n    _classCallCheck(this, Tooltip);\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n        caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n      if (!opacity) {\n        return;\n      }\n      me._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref8) {\n        var datasetIndex = _ref8.datasetIndex,\n          index = _ref8.index;\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = me._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n      var positionChanged = me._positionChanged(active, e);\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        me._active = active;\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this14;\n    _classCallCheck(this, CategoryScale);\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getUserBounds2 = me.getUserBounds(),\n        minDefined = _me$getUserBounds2.minDefined,\n        maxDefined = _me$getUserBounds2.maxDefined;\n      var _me$getMinMax = me.getMinMax(true),\n        min = _me$getMinMax.min,\n        max = _me$getMinMax.max;\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref9) {\n  var horizontal = _ref9.horizontal,\n    minRotation = _ref9.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this15;\n    _classCallCheck(this, LinearScaleBase);\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n      var _me$getUserBounds3 = me.getUserBounds(),\n        minDefined = _me$getUserBounds3.minDefined,\n        maxDefined = _me$getUserBounds3.maxDefined;\n      var min = me.min,\n        max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax2 = me.getMinMax(true),\n        min = _me$getMinMax2.min,\n        max = _me$getMinMax2.max;\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = me._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this16;\n    _classCallCheck(this, LogarithmicScale);\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax3 = me.getMinMax(true),\n        min = _me$getMinMax3.min,\n        max = _me$getMinMax3.max;\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$getUserBounds4 = me.getUserBounds(),\n        minDefined = _me$getUserBounds4.minDefined,\n        maxDefined = _me$getUserBounds4.maxDefined;\n      var min = me.min;\n      var max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale.getLabels().length;\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (var i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    var angle = toDegrees(scale.getIndexAngle(i));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var _optsAtIndex = optsAtIndex,\n      backdropColor = _optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this17;\n    _classCallCheck(this, RadialLinearScale);\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax4 = me.getMinMax(false),\n        min = _me$getMinMax4.min,\n        max = _me$getMinMax4.max;\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var me = this;\n      var pointLabels = me._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(me.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n        backgroundColor = _me$options7.backgroundColor,\n        circular = _me$options7.grid.circular;\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this18;\n    _classCallCheck(this, TimeScale);\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n      var _me$getUserBounds5 = me.getUserBounds(),\n        min = _me$getUserBounds5.min,\n        max = _me$getUserBounds5.max,\n        minDefined = _me$getUserBounds5.minDefined,\n        maxDefined = _me$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = me.min;\n      var max = me.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n      var size = me._getLabelSize(exampleLabel);\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = me.getMatchingVisibleMetas();\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = me.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this19;\n    _classCallCheck(this, TimeSeriesScale);\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._minPos = undefined;\n    _this19._tableRange = undefined;\n    return _this19;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n      var timestamps = me._getTimestampsForTable();\n      var table = me._table = me.buildLookupTable(timestamps);\n      me._minPos = interpolate(table, me.min);\n      me._tableRange = interpolate(table, me.max) - me._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","_isDomSupported","J","log10","K","_factorize","L","finiteOrDefault","M","callback","N","_addGrace","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","clipArea","V","renderText","W","unclipArea","X","toFont","Y","_toLeftRightCenter","Z","_alignStartEnd","$","overrides","a0","merge","a1","_capitalize","a2","descriptors","a3","isFunction","a4","_attachContext","a5","_createResolver","a6","_descriptors","a7","mergeIf","a8","uid","a9","debounce","aa","retinaScale","ab","clearCanvas","ac","setsEqual","ad","_elementsEqual","ae","getAngleFromPoint","af","_readValueToProps","ag","_updateBezierControlPoints","ah","_computeSegments","ai","_boundSegments","aj","_steppedInterpolation","ak","_bezierInterpolation","al","_pointInLine","am","_steppedLineTo","an","_bezierCurveTo","ao","drawPoint","ap","addRoundedRectPath","aq","toTRBL","ar","toTRBLCorners","as","_boundSegment","at","_normalizeAngle","au","getRtlAdapter","av","overrideTextDirection","aw","_textX","ax","restoreTextDirection","ay","noop","az","distanceBetweenPoints","aA","_setMinAndMaxByKey","aB","niceNum","aC","almostWhole","aD","almostEquals","aE","_decimalPlaces","aF","_longestText","aG","_filterBetween","aH","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","hidden","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","arguments","_sync","prototype","getAllScaleValues","_cache","$bar","metas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","BarController","iAxisKey","vAxisKey","obj","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","getProps","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","inflateAmount","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/tusha/OneDrive/Desktop/PROJECT/cryptush/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.5.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as _isDomSupported, J as log10, K as _factorize, L as finiteOrDefault, M as callback, N as _addGrace, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as clipArea, V as renderText, W as unclipArea, X as toFont, Y as _toLeftRightCenter, Z as _alignStartEnd, $ as overrides, a0 as merge, a1 as _capitalize, a2 as descriptors, a3 as isFunction, a4 as _attachContext, a5 as _createResolver, a6 as _descriptors, a7 as mergeIf, a8 as uid, a9 as debounce, aa as retinaScale, ab as clearCanvas, ac as setsEqual, ad as _elementsEqual, ae as getAngleFromPoint, af as _readValueToProps, ag as _updateBezierControlPoints, ah as _computeSegments, ai as _boundSegments, aj as _steppedInterpolation, ak as _bezierInterpolation, al as _pointInLine, am as _steppedLineTo, an as _bezierCurveTo, ao as drawPoint, ap as addRoundedRectPath, aq as toTRBL, ar as toTRBLCorners, as as _boundSegment, at as _normalizeAngle, au as getRtlAdapter, av as overrideTextDirection, aw as _textX, ax as restoreTextDirection, ay as noop, az as distanceBetweenPoints, aA as _setMinAndMaxByKey, aB as niceNum, aC as almostWhole, aD as almostEquals, aE as _decimalPlaces, aF as _longestText, aG as _filterBetween, aH as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = me;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      setBorderSkipped(properties, properties.options || bars[i].options, stack, index);\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = me;\n    const actualBase = baseValue || 0;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (me.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._datasetIndex = me.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = me.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = me.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.5.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const me = this;\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      me.update();\n    } else {\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1 || !_isPointInArea(me, area, me.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    const inflateAmount = 0.33;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount, outer));\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    const rtlHelper = getRtlAdapter(rtl, me.left, me.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return Object.assign(Object.create(parent), {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const me = this;\n    const pointLabels = me._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(me.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}